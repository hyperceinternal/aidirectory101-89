// This file is automatically generated. Do not edit it directly.
import { createClient, SupabaseClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Get stored credentials or use defaults
const getStoredCredentials = () => {
  const storedUrl = localStorage.getItem('SUPABASE_URL');
  const storedKey = localStorage.getItem('SUPABASE_KEY');
  return {
    url: storedUrl || "https://swmoolbumenhwczvorln.supabase.co",
    key: storedKey || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN3bW9vbGJ1bWVuaHdjenZvcmxuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0ODM4NzksImV4cCI6MjA2MDA1OTg3OX0.IgrQKBhpgkIkWQdDXv5yzCbTSllXE1PTfBv5lGfQ0E8"
  };
};

const { url: SUPABASE_URL, key: SUPABASE_PUBLISHABLE_KEY } = getStoredCredentials();

let supabaseInstance: SupabaseClient<Database> | null = null;

export const getSupabaseClient = () => {
  if (!supabaseInstance) {
    const { url, key } = getStoredCredentials();
    supabaseInstance = createClient<Database>(url, key);
  }
  return supabaseInstance;
};

export const updateSupabaseCredentials = (url: string, key: string) => {
  // Store new credentials
  localStorage.setItem('SUPABASE_URL', url);
  localStorage.setItem('SUPABASE_KEY', key);
  
  // Update instance
  supabaseInstance = createClient<Database>(url, key);
  
  // Force reload the page to ensure all components reinitialize with new client
  window.location.reload();
  
  return supabaseInstance;
};

export const supabase = getSupabaseClient();